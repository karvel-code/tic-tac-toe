#!/usr/bin/env ruby
require_relative '../lib/player'
# User Interface
puts "WELCOME TO RUBY'S TIC TAC TOE GAME"

puts 'Enter Player One name:'
player_name = gets.chomp
player1 = Player.new(player_name, 'X')
puts "Hello #{player1.name} you will be playing with #{player1.symbol}."

puts 'Enter Player Two name:'
player_name = gets.chomp
player2 = Player.new(player_name, 'O')
puts "Hello #{player2.name} you will be playing with #{player2.symbol}."

def validate(move)
  move = move.to_i
  if move < 10 && move.positive?
    true
  else
    false
  end
end

# Board
def display_board(board)
  puts " #{board[0]} | #{board[1]} | #{board[2]} "
  puts '-----------'
  puts " #{board[3]} | #{board[4]} | #{board[5]} "
  puts '-----------'
  puts " #{board[6]} | #{board[7]} | #{board[8]} "
end

board = %w[1 2 3 4 5 6 7 8 9]
display_board(board)

def draw
  false
end

def win
  winning = 0
  case winning
  when 1
    puts "#{player1.name} has won"
  when 2
    puts "#{player2.name} has won"
  when 3
    puts 'Its a tie'
  end
  winning
end

# game_on = true
count = 0
while count <= 9
  puts "#{player1.name} choose between 1 - 9"
  move = gets.chomp
  until validate(move)
    puts 'Enter valid move'
    move = gets.chomp
    break if validate(move)

  end
  #   board[move.to_i - 1] = 'X'
  display_board(board)
  count += 1
  win
  puts "#{player2.name} choose between 1 - 9"
  move = gets.chomp
  until validate(move)
    puts 'Enter valid move'
    move = gets.chomp
    break if validate(move)
  end
  #   board[move.to_i - 1] = 'O'
  display_board(board)
  count += 1
  win
  #   game_on = false unless win.zero?
end

puts "#{player1.name} is the winner."
puts 'GAME OVER'
